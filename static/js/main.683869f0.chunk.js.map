{"version":3,"sources":["context.js","Services/Auth.js","Settings.js","Components/CurrencyDisplay.js","Components/ItemList.js","Components/Inventory.js","App.js","serviceWorker.js","index.js"],"names":["MainContext","React","createContext","gw2ApiBaseConfig","prefixUrl","TestAndSetAuth","dispatch","token","config","Object","assign","hooks","beforeRequest","request","url","URL","search","URLSearchParams","searchParams","toString","set","Request","ky","get","json","then","data","type","value","api","create","id","name","localStorage","setItem","Settings","props","context","useContext","useState","state","setToken","formRef","useRef","autoComplete","ref","TextField","label","inputProps","required","onChange","e","target","Button","onClick","Array","prototype","reduce","call","current","a","v","validity","valid","catch","err","currencies","1","Math","floor","CurrencyDisplay","currencyData","setCurrencyData","useEffect","currency","hasOwnProperty","Promise","all","result","icon","style","display","justifyContent","alignItems","length","map","i","amount","imgSrc","src","width","height","SlotRow","slotData","upgrades","Grid","container","direction","item","xs","justify","itemData","Typography","valueData","buys","unit_price","count","key","cacheTime","moment","duration","dataCache","getValues","ids","fetch","fetchedAt","join","now","forEach","datum","r","getDetails","undefined","ItemList","itemDataList","setItemDataList","slots","allIds","slot","push","console","log","values","worth","vd","filter","sort","b","Inventory","selectedCharacter","setSelectedCharacter","characterList","setCharacterList","inventoryList","setInventoryList","update","setUpdate","encodeURI","bags","inventory","InputLabel","Select","MenuItem","App","timestamp","$gte","startOf","toDate","$lt","endOf","lastFilter","usePrevious","historicalWealth","setHistoricalWealth","db","collection","find","toArray","results","newHistoricalWealth","account_id","Date","wealth","path","flexDirection","dataKey","stroke","dot","Boolean","window","location","hostname","match","initialState","zango","Db","reducer","action","Wrapper","useReducer","providerState","setProviderState","getWealth","forceUpdate","limit","latestEntry","JSON","stringify","obj","insert","getItem","removeItem","newProviderState","setInterval","Provider","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.683869f0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const MainContext = React.createContext();","import ky from 'ky';\r\n\r\nconst gw2ApiBaseConfig = {\r\n    prefixUrl: 'https://api.guildwars2.com/'\r\n};\r\n\r\nexport function TestAndSetAuth(dispatch, token) {\r\n    let config = {};\r\n    Object.assign(config, gw2ApiBaseConfig, {\r\n        hooks: {\r\n            beforeRequest: [\r\n                request => {\r\n                    let url = new URL(request.url);\r\n                    let search = new URLSearchParams(url.searchParams.toString());\r\n                    search.set(\"access_token\", token);\r\n                    url.search = search;\r\n                    \r\n                    return new Request(url, request);\r\n                }\r\n            ]\r\n        }\r\n    })\r\n\r\n    return ky.get('v2/account', config).json()\r\n    .then(data=>{\r\n        dispatch({\r\n            type: \"mergeState\",\r\n            value: {\r\n                api: ky.create(config),\r\n                token,\r\n                id: data.id,\r\n                name: data.name,\r\n            }\r\n        })\r\n\r\n        localStorage.setItem('token', token);\r\n    });\r\n}","import React, { useContext, useRef, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { MainContext } from './context';\r\nimport { TestAndSetAuth } from './Services/Auth';\r\n\r\nexport function Settings(props) {\r\n    const context = useContext(MainContext);\r\n    const [token, setToken] = useState(context.state.token || \"\");\r\n    const inputRef = useRef(null);\r\n    const formRef = useRef(null);\r\n\r\n    function onSubmit() {\r\n        let valid = Array.prototype.reduce.call(formRef.current, (a,v)=>v.validity.valid && a, true);\r\n        if(!valid) return;\r\n\r\n        TestAndSetAuth(context.dispatch, token)\r\n        .catch(err=>{\r\n            setToken(\"\");\r\n        });\r\n    }\r\n\r\n    return(\r\n        <form autoComplete=\"off\"\r\n            ref={formRef}\r\n        >\r\n            <TextField label=\"API Key\"\r\n                value={token}\r\n                inputProps={{\r\n                    required: true\r\n                }}\r\n\r\n                onChange={(e)=>setToken(e.target.value)}\r\n            />\r\n\r\n            <Button onClick={onSubmit}>\r\n                Set\r\n            </Button>\r\n        </form>\r\n    );\r\n}","import React, {useState, useEffect, useContext} from 'react';\r\nimport { MainContext } from '../context';\r\n\r\nconst currencies = {\r\n    1: (value) => {\r\n        if(value > 10000)\r\n            return [\r\n                [Math.floor(value / 10000), \"https://render.guildwars2.com/file/090A980A96D39FD36FBB004903644C6DBEFB1FFB/156904.png\"],\r\n                [Math.floor((value / 100) % 100), \"https://render.guildwars2.com/file/E5A2197D78ECE4AE0349C8B3710D033D22DB0DA6/156907.png\"],\r\n                [value % 100, \"https://render.guildwars2.com/file/6CF8F96A3299CFC75D5CC90617C3C70331A1EF0E/156902.png\"]\r\n            ]\r\n        else if(value > 100) \r\n            return [\r\n                [Math.floor((value / 100) % 100), \"https://render.guildwars2.com/file/E5A2197D78ECE4AE0349C8B3710D033D22DB0DA6/156907.png\"],\r\n                [value % 100, \"https://render.guildwars2.com/file/6CF8F96A3299CFC75D5CC90617C3C70331A1EF0E/156902.png\"]\r\n            ]\r\n        else\r\n            return [\r\n                [value, \"https://render.guildwars2.com/file/6CF8F96A3299CFC75D5CC90617C3C70331A1EF0E/156902.png\"]\r\n            ]\r\n    }\r\n}\r\n\r\nfunction getCurrencyData(currency, api) {\r\n    if(currencies.hasOwnProperty(currency.id))\r\n        return Promise.all(currencies[currency.id](currency.value));\r\n    else\r\n        return Promise.all([\r\n            Promise.all([currency.value, api.get(`v2/currencies?ids=${currency.id}`).json().then(result=>result.icon)])\r\n        ]);\r\n}\r\n\r\nexport function CurrencyDisplay(props) {\r\n    let context = useContext(MainContext);\r\n\r\n    let [currencyData, setCurrencyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        getCurrencyData(props.currency, context.state.api)\r\n        .then(setCurrencyData);\r\n    }, [props.currency]);\r\n\r\n    return(\r\n        <div style={{display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n            {currencyData.length\r\n            ? currencyData.map(([amount, imgSrc], i)=>\r\n            <>\r\n                <p>{amount}</p>\r\n                <img src={imgSrc} style={{width:'1.5rem', height:'1.5rem'}}/>\r\n            </>\r\n            )\r\n            : null}\r\n        </div>\r\n    );\r\n}","import React, {useState, useEffect, useContext} from 'react';\r\nimport moment from 'moment';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {CurrencyDisplay} from './CurrencyDisplay';\r\nimport { MainContext } from '../context';\r\n\r\nfunction SlotRow(props) {\r\n    if(props.data) {\r\n        if(props.data?.slotData?.upgrades?.length)\r\n            return(\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                >\r\n                    <Grid \r\n                        item xs={12}\r\n                        container \r\n                        direction=\"row\" \r\n                        justify=\"space-between\"\r\n                        alignItems=\"stretch\"\r\n                    >\r\n                        <Grid item xs={1}>\r\n                            <img style={{height:'56px', width:'56px'}} src={props.data.itemData.icon} />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Typography>\r\n                                {props.data.itemData.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            { props.data.valueData\r\n                            ? <CurrencyDisplay currency={{id: 1, value: props.data.valueData.buys.unit_price}} />\r\n                            : null\r\n                            }\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <Typography>\r\n                                {props.data.count}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            { props.data.valueData\r\n                            ? <CurrencyDisplay currency={{id: 1, value: (props.data.valueData.buys.unit_price * props.data.count)}} />\r\n                            : null\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                    {props.data.slotData.upgrades.map((v,i)=>\r\n                        <Grid item xs={12} container direction=\"row\">\r\n                            <Grid item xs={1}/>\r\n                            <Grid item xs={11}>\r\n                                <SlotRow key={i} data={v}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            );\r\n        else\r\n            return(\r\n                <Grid \r\n                    container \r\n                    direction=\"row\" \r\n                    justify=\"space-between\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    <Grid item xs={1}>\r\n                        <img style={{height:'56px', width:'56px'}} src={props.data.itemData.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography>\r\n                            {props.data.itemData.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        { props.data.valueData\r\n                        ? <CurrencyDisplay currency={{id: 1, value: props.data.valueData.buys.unit_price}} />\r\n                        : null\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography>\r\n                            {props.data.count}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        { props.data.valueData\r\n                        ? <CurrencyDisplay currency={{id: 1, value: (props.data.valueData.buys.unit_price * props.data.count)}} />\r\n                        : null\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n    }\r\n    return null;\r\n}\r\n\r\nlet cacheTime = moment.duration(10, 'minutes');\r\nlet dataCache = {};\r\nasync function getValues(api, ids) {\r\n    let fetch = ids.reduce((a,id)=>{\r\n        if(dataCache.hasOwnProperty(id) && (dataCache[id].value == null || moment() - dataCache[id].value.fetchedAt < cacheTime))\r\n            return a;\r\n        else\r\n            return [...a, id];\r\n    }, []);\r\n\r\n    if(fetch.length) {\r\n        await api.get(`v2/commerce/prices?ids=${fetch.join(',')}`).json()\r\n        .then(valueData=>{\r\n            let now = moment();\r\n            valueData.forEach(datum=>dataCache[datum.id] = Object.assign(dataCache[datum.id] || {}, {value:datum, fetchedAt:now}));\r\n        });\r\n    }\r\n    ids.forEach(id=>{\r\n        if(!dataCache.hasOwnProperty(id))\r\n            dataCache.value = null;\r\n    });\r\n\r\n    return ids.reduce((a,id)=>{\r\n        let r = dataCache[id]?.value;\r\n        if(r)\r\n            return [...a, r];\r\n        return a;\r\n    }, []);\r\n}\r\nasync function getDetails(api, ids) {\r\n    let fetch = ids.reduce((a,id)=>{\r\n        if(dataCache.hasOwnProperty(id) && dataCache[id].item != undefined)\r\n            return a;\r\n        else\r\n            return [...a, id];\r\n    }, []);\r\n\r\n    if(fetch.length) {\r\n        await api.get(`v2/items?ids=${fetch.join(',')}`).json()\r\n        .then(itemData=>{\r\n            itemData.forEach(datum=>dataCache[datum.id] = Object.assign(dataCache[datum.id] || {}, {item:datum}));\r\n        });\r\n    }\r\n    ids.forEach(id=>{\r\n        if(!dataCache.hasOwnProperty(id))\r\n            dataCache.item = null;\r\n    });\r\n\r\n    return ids.reduce((a,id)=>{\r\n        let r = dataCache[id]?.item;\r\n        if(r)\r\n            return [...a, r];\r\n        return a;\r\n    }, []);\r\n}\r\n\r\nexport function ItemList(props) {\r\n    const context = useContext(MainContext);\r\n    let [itemDataList, setItemDataList] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if(!props.slots || props.slots.length == 0) {\r\n            setItemDataList([]);\r\n            return;\r\n        }\r\n\r\n        let allIds = [];\r\n        let slots = props.slots.reduce((a,slot)=>{\r\n            if(slot) {\r\n                if(a.hasOwnProperty(slot.id)) {\r\n                    a[slot.id].count += slot.count;\r\n                }\r\n                else {\r\n                    a[slot.id] = {\r\n                        id: slot.id,\r\n                        count: slot.count,\r\n                        slotData: slot\r\n                    };\r\n\r\n                    if(slot.upgrades) \r\n                        allIds.push(slot.id, ...slot.upgrades);\r\n                    else\r\n                        allIds.push(slot.id);\r\n                }\r\n            }\r\n            return a;\r\n        }, {});\r\n\r\n        Promise.all([\r\n            getDetails(context.state.api, allIds),\r\n            getValues(context.state.api, allIds)\r\n        ])\r\n        .then(([itemData, valueData])=>{\r\n            itemData = itemData.reduce((a,v)=>({ ...a, [v.id]:v }), {});\r\n            valueData = valueData.reduce((a,v)=>({ ...a, [v.id]:v }), {});\r\n            console.log(itemData, valueData, allIds);\r\n\r\n            Object.values(slots).forEach(slot=>{\r\n                let worth = 0;\r\n                if(itemData.hasOwnProperty(slot.id)) \r\n                    slot.itemData = itemData[slot.id];\r\n                if(valueData.hasOwnProperty(slot.id)) {\r\n                    slot.valueData = valueData[slot.id];\r\n                    worth = slot.valueData.buys.unit_price * slot.count;\r\n                }\r\n\r\n                if(slot.slotData.upgrades) {\r\n                    slot.slotData.upgrades = slot.slotData.upgrades.map(id=>{\r\n                        let vd = valueData[id];\r\n                        if(vd)\r\n                            worth += vd.buys.unit_price;\r\n                        return { id, count:1, itemData:itemData[id], valueData:vd };\r\n                    });\r\n                }\r\n\r\n                slot.worth = worth;\r\n            });\r\n\r\n            setItemDataList(Object.values(slots));\r\n        })\r\n    }, [props.slots]);\r\n\r\n    console.log(itemDataList);\r\n    return itemDataList.filter(item=>item && item.itemData).sort((a,b)=>{\r\n        return (b.worth) - (a.worth)\r\n    }).map((item,i)=><SlotRow key={i} data={item} />);\r\n}","import React, {useState, useContext, useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/Menuitem';\r\nimport { ItemList } from './ItemList';\r\nimport { MainContext } from '../context';\r\n\r\nexport function Inventory(props) {\r\n    let context = useContext(MainContext);\r\n    let [selectedCharacter, setSelectedCharacter] = useState(\"\");\r\n    let [characterList, setCharacterList] = useState([]);\r\n    let [inventoryList, setInventoryList] = useState([]);\r\n    let [update, setUpdate] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        context.state.api.get('v2/characters').json()\r\n        .then(setCharacterList);\r\n    }, [context.id]);\r\n\r\n    useEffect(()=>{\r\n        if(!selectedCharacter) {\r\n            setInventoryList([]);\r\n        }\r\n        else {\r\n            context.state.api.get(`v2/characters/${encodeURI(selectedCharacter)}/inventory`).json()\r\n            .then(({bags})=>\r\n                setInventoryList(bags.reduce((a,v)=>[...a, ...v.inventory], []))\r\n            );\r\n        }\r\n        setUpdate(false);\r\n    }, [selectedCharacter, context.id]);\r\n\r\n    useEffect(()=>{\r\n        setSelectedCharacter(selectedCharacter);\r\n    }, [update]);\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <InputLabel>Character</InputLabel>\r\n                <Select\r\n                    value={selectedCharacter}\r\n                    onChange={e=>setSelectedCharacter(e.target.value)}\r\n                >\r\n                    {characterList.map(v=>\r\n                        <MenuItem key={v} value={v}>{v}</MenuItem>\r\n                    )}\r\n                </Select>\r\n                <Button onClick={()=>setUpdate(true)}>Refresh</Button>\r\n            </div>\r\n            <ItemList slots={inventoryList} />\r\n        </div>\r\n    );\r\n}","import React, {useContext, useState, useEffect, useRef} from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Brush } from 'recharts';\r\nimport moment from 'moment';\r\nimport { MainContext } from './context';\r\nimport { Settings } from './Settings';\r\nimport {CurrencyDisplay} from './Components/CurrencyDisplay';\r\nimport {Inventory} from './Components/Inventory';\r\n\r\n//https://blog.logrocket.com/how-to-get-previous-props-state-with-react-hooks/\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(()=>{\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nfunction App() {\r\n  const context = useContext(MainContext);\r\n  const [filter, setFilter] = useState({\r\n    timestamp: {\r\n      $gte: moment().startOf('day').toDate(),\r\n      $lt: moment().endOf('day').toDate()\r\n    }\r\n  });\r\n  const lastFilter = usePrevious(filter);\r\n  const [historicalWealth, setHistoricalWealth] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    if(lastFilter !== filter) {\r\n      context.state.db.collection('wealth').find(filter)\r\n      .toArray()\r\n      .then(results=>{\r\n        setHistoricalWealth(results);\r\n      })\r\n    }\r\n    else {\r\n      let newHistoricalWealth = [...historicalWealth, {\r\n        account_id: context.state.id,\r\n        timestamp: new Date(),\r\n        data: context.state.wealth\r\n      }];\r\n      console.log(newHistoricalWealth);\r\n      setHistoricalWealth(newHistoricalWealth);\r\n    }\r\n  }, [filter, context.state.wealth]);\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {context.state.id &&\r\n          <Route path=\"/\">\r\n            <h1>\r\n              Hello World\r\n              <img src=\"https://static.staticwars.com/quaggans/construction.jpg\" style={{height:\"3rem\", width:\"3rem\"}}/>\r\n            </h1>\r\n            {context.state.wealth &&\r\n              <div style={{display:'flex', flexDirection:'row'}}>\r\n                <CurrencyDisplay currency={context.state.wealth[0]} api={context.state.api} />\r\n                <LineChart width={100} height={50}\r\n                  data={historicalWealth}\r\n                >\r\n                  <Line type=\"monotone\" dataKey={v=>v.data[0].value} stroke=\"#FFA71A\" dot={false}/>\r\n                </LineChart>\r\n              </div>\r\n            }\r\n            <Inventory />\r\n          </Route>\r\n        }\r\n        <Route path=\"/\">\r\n          <Settings />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, {useReducer, useContext, useEffect, useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport zango from 'zangodb';\r\nimport {MainContext} from './context';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { TestAndSetAuth } from './Services/Auth';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst initialState = {\r\n  db: new zango.Db('db', 2, {wealth: ['account_id', 'timestamp']}),\r\n  api: undefined,\r\n  token: undefined,\r\n  id: undefined,\r\n  name: undefined\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch(action.type) {\r\n    case \"mergeState\":\r\n      return Object.assign({}, state, action.value);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction Wrapper(props) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [providerState, setProviderState] = useState({state, dispatch});\r\n\r\n  function getWealth(forceUpdate=false) {\r\n    Promise.all([\r\n      state.db.collection('wealth').find().sort({timestamp:-1}).limit(1).toArray(),\r\n      state.api.get('v2/account/wallet').json()\r\n    ])\r\n    .then(([[latestEntry], data])=>{\r\n      if(!latestEntry || JSON.stringify(latestEntry.data) != JSON.stringify(data)) {\r\n        let obj = {\r\n          account_id: state.id,\r\n          timestamp: new Date(),\r\n          data\r\n        };\r\n        state.db.collection('wealth').insert(obj);\r\n        console.log(obj);\r\n\r\n        dispatch({type:\"mergeState\", value:{\r\n          wealth: data\r\n        }});\r\n      }\r\n      else if(forceUpdate) {\r\n        dispatch({type:\"mergeState\", value:{\r\n          wealth: data\r\n        }});\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    state.db.collection('wealth').find().toArray().then(console.log);\r\n    let token = window.localStorage.getItem('token');\r\n\r\n    if(token) {\r\n      TestAndSetAuth(dispatch, token)\r\n      .catch(err=>{\r\n        window.localStorage.removeItem('token');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    console.log(state);\r\n    let newProviderState = {state, dispatch};\r\n    setProviderState(newProviderState);\r\n    window.providerState = newProviderState;\r\n  }, [state]);\r\n\r\n  useEffect(()=>{\r\n    if(!state.api) return;\r\n\r\n    getWealth(true);\r\n    setInterval(getWealth, 60000);\r\n  }, [state.api]);\r\n\r\n  return(\r\n    <MainContext.Provider value={providerState}>\r\n      <App/>\r\n    </MainContext.Provider>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Wrapper/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}